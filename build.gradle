/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.2/samples
 */

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

bootJar {
    enabled = false
}

gradle.buildFinished {
    project.buildDir.deleteDir()
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
    }

    java {
        sourceCompatibility = '21'
    }
    
}

configure(subprojects.findAll { it.name == "messaging@rest@sender" }) {
    

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}

configure(subprojects.findAll { it.name == "messaging@rest@receiver" }) {
    

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }

    
}

configure(subprojects.findAll { it.name == "messaging@consumer" }) {
    

    

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.kafka:spring-kafka'
    }

    
}

configure(subprojects.findAll { it.name == "messaging@event_sourcing@consumer" }) {
    

    

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.kafka:spring-kafka'
    }

    
}

configure(subprojects.findAll { it.name == "messaging@event_sourcing@producer" }) {
    

    

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.kafka:spring-kafka'
    }

    
}

configure(subprojects.findAll { it.name == "shared_database@order_service"}) {
    

    

    

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'


        runtimeOnly 'org.postgresql:postgresql'


        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'com.h2database:h2'

    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

configure(subprojects.findAll { it.name == "shared_database@customer_service"}) {
    

    

    

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'


        runtimeOnly 'org.postgresql:postgresql'


        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'com.h2database:h2'

    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

configure(subprojects.findAll { it.name == "private_table_per_service@order_service"}) {
    

    

    

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'


        runtimeOnly 'org.postgresql:postgresql'


        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'com.h2database:h2'

    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}


configure(subprojects.findAll { it.name == "private_table_per_service@customer_service"}) {
    

    

    

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'


        runtimeOnly 'org.postgresql:postgresql'


        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'com.h2database:h2'

    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

configure(subprojects.findAll { it.name == "messaging@graphql"}) {
    

    

    

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-graphql'

    }
}

configure(subprojects.findAll { it.name == "circuit_breaker@proxy"}) {

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'io.vavr:vavr:0.10.4'
        implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j:2.1.8'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-aop:2.7.18'


    }
}

configure(subprojects.findAll { it.name == "circuit_breaker@real_service"}) {

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}

configure(subprojects.findAll { it.name == "self_registration@services_registry"}) {

    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.9"
        }
    }

}

configure(subprojects.findAll { it.name == "self_registration@services_A"}) {

    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.9"
        }
    }

}
